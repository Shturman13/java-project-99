name: Build, Test, and Deploy

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 22
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '22'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          fetch-depth: 0

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Build project
        run: make build

      - name: Run tests
        run: make test

      - name: Generate coverage report
        run: make report

#  sonar-analysis:
#    needs: build-and-test
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0 # Полная история для SonarQube
#
#      - name: Set up JDK 22
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: '22'
#
#      - name: Setup Gradle
#        uses: gradle/actions/setup-gradle@v4
#        with:
#          fetch-depth: 0
#
#      - name: Cache Gradle packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.gradle/caches
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/gradle-wrapper.properties') }}
#          restore-keys: ${{ runner.os }}-gradle-
#
#      - name: Cache SonarQube packages
#        uses: actions/cache@v4
#        with:
#          path: ~/.sonar/cache
#          key: ${{ runner.os }}-sonar
#          restore-keys: ${{ runner.os }}-sonar
#
#      - name: Build project
#        run: ./gradlew build --info
#
#      - name: SonarQube analysis
#        env:
#          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: make sonar
#  deploy:
#    needs: sonar-analysis
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v4
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#
#      - name: Log in to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          push: true
#          tags: hexletcomponents/java-spring-blog:latest
#          cache-from: type=registry,ref=hexletcomponents/java-spring-blog:latest
#          cache-to: type=inline
